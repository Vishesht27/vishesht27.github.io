---
import BlogPost from '../../layouts/BlogPost.astro';

const nextPost = {
    title: 'Komodo-7B',
    slug: '/blog/komodo_7b'
};
---

<BlogPost
    title="Intro to Agents"
    date="February 1, 2025"
    readingTime="20 min"
    author="Vishesh Tripathi"
    nextPost={nextPost}
>

   <div class="blog-content">
        <p class="intro-text">If you‚Äôre reading this, you‚Äôve probably heard people say:</p>
        
 <blockquote class="highlight-quote">  
    ‚Äú2025 will be the year of AI Agents.‚Äù  
</blockquote>  

<p>But what <i>are</i> AI agents, and why is everyone talking about them? How are they different‚Äîor better‚Äîthan the Large Language Models (LLMs) we already use?</p>  

<h2>Why LLMs Are Powerful (But Limited)</h2>  
<p>Since 2020, LLMs like ChatGPT have changed how we work. They‚Äôve doubled our productivity by doing tasks like:</p>  
<ul>  
    <li>Writing code</li>  
    <li>Drafting emails</li>  
    <li>Creating templates</li>  
    <li>And much more</li>  
</ul>  

<p>But here‚Äôs the catch: <strong>LLMs can‚Äôt take real-world actions</strong>. They can only give you text or images as replies. Let‚Äôs break this down.</p>  

<h2>What‚Äôs an ‚ÄúAction‚Äù?</h2>  
<div class="definition-box">  
    <p>An ‚Äúaction‚Äù means doing something that changes your current situation. For example, booking a flight or paying a bill‚Äînot just talking about it.</p>  
</div>  

<h2>Tools Make LLMs Powerful Agents</h2>  
<p>What if LLMs could use tools, like humans use hammers or calculators? <strong>That‚Äôs exactly what AI agents do!</strong></p>  

<h2>Real-Life Example: Booking Flights</h2>  
<p>Imagine asking ChatGPT: <i>‚ÄúWhat‚Äôs the total cost of the cheapest round-trip flights from New Delhi to Bali?‚Äù</i> Today, it can‚Äôt answer this‚Äîit only knows data up to 2023.</p>  

<p>But if we give it two tools:</p>  
<div class="tools-box">  
    <ul>  
        <li>A <strong>Google Flights API</strong> (to check live prices)</li>  
        <li>A <strong>calculator</strong> (to add numbers)</li>  
    </ul>  
</div>  

<p>Now, here‚Äôs how ChatGPT becomes an AI agent:</p>  
<ol class="process-list">  
    <li>It uses the Google Flights tool to find all flight prices for your dates.</li>  
    <li>Picks the cheapest options for both legs of the trip.</li>  
    <li>Adds the two prices using the calculator tool and gives you the total cost.</li>  
</ol>  

<div class="note-box">  
    <p><strong>Why use a calculator?</strong> LLMs like GPT-4 aren‚Äôt great at math. Tools let them focus on what they do best‚Äîanalyzing data and making decisions‚Äîwhile specialized tools handle the rest.</p>  
</div>  

       <h2>What Tools Can AI Agents Use? (Spoiler: No Limits!)</h2>
        <p>You might wonder: <i>"How many tools can we connect to an AI agent? Is there a limit?"</i></p>
        <p><strong>The answer is exciting: there's no limit.</strong> If a tool can help the LLM solve a problem, it can be added. The more tools, the smarter the agent becomes.</p>

        <div class="examples-grid">
            <div class="example-card">
                <h3>üîç The RAG Agent</h3>
                <p class="tools">Tools: Web search APIs, company databases, Wikipedia access</p>
                <p>Need a report on "AI trends in 2024"? Instead of giving outdated info, this agent scours the internet and internal data in real-time, summarizes findings, and even adds sources.</p>
            </div>

            <div class="example-card">
                <h3>üîÑ The Unit Converter Agent</h3>
                <p class="tools">Tools: Currency converters, measurement APIs</p>
                <p>Ask, "How much is $50 in Euros today?" It checks live exchange rates and calculates the exact amount‚Äîno outdated approximations.</p>
            </div>

            <div class="example-card">
                <h3>üì± The Social Media Agent</h3>
                <p class="tools">Tools: Canva API, Instagram/Twitter schedulers</p>
                <p>Say, "Post a motivational quote every Friday at 5 PM." The agent designs the graphic, writes the caption, and schedules it automatically.</p>
            </div>

            <div class="example-card">
                <h3>üõí The Personal Shopper Agent</h3>
                <p class="tools">Tools: Amazon/Flipkart APIs, price trackers</p>
                <p>Tell it, "Find a wireless keyboard under ‚Çπ2000 with 4+ star reviews." It hunts across shopping sites, compares prices, and shares the top 3 options.</p>
            </div>

            <div class="example-card">
                <h3>üí™ The Health Coach Agent</h3>
                <p class="tools">Tools: Fitness trackers, calorie databases</p>
                <p>Ask, "Did I hit my fitness goals this week?" It analyzes your step count, sleep data, and meals, then gives a personalized report.</p>
            </div>
        </div>

        <h2>How Do AI Agents Actually Work? (Step-by-Step)</h2>
        <p>Let's break down the process of how an AI agent uses tools to solve problems. Imagine it like a chef in a kitchen‚Äîthinking, choosing tools, and combining ingredients to serve a dish:</p>

        <div class="workflow-box">
            <ol class="workflow-list">
                <li>
                    <div class="step-header">
                        <span class="step-number">1</span>
                        <h4>Question</h4>
                    </div>
                    <p>The user asks something, e.g., <i>"What's the cheapest way to fly from Delhi to Bali next week?"</i></p>
                </li>
                <li>
                    <div class="step-header">
                        <span class="step-number">2</span>
                        <h4>Thought</h4>
                    </div>
                    <p>The LLM thinks: <i>"I need live flight prices and a way to add numbers. Let me check which tools I have."</i></p>
                </li>
                <li>
                    <div class="step-header">
                        <span class="step-number">3</span>
                        <h4>Action</h4>
                    </div>
                    <p>The LLM picks a tool from its toolkit:</p>
                    <ul class="tool-list">
                        <li><code>[Flights]</code> ‚Üí To search for flights</li>
                        <li><code>[Calculator]</code> ‚Üí To add prices</li>
                        <li><code>[None]</code> ‚Üí If no tool is needed</li>
                    </ul>
                </li>
                <li>
                    <div class="step-header">
                        <span class="step-number">4</span>
                        <h4>Action Input</h4>
                    </div>
                    <p>The LLM tells the tool what to do: <i>"Search Delhi‚ÜíBali flights for June 10-17, 2024."</i></p>
                </li>
                <li>
                    <div class="step-header">
                        <span class="step-number">5</span>
                        <h4>Observation</h4>
                    </div>
                    <p>The tool returns raw data: <i>"Cheapest flights: ‚Çπ18,500 (outbound), ‚Çπ20,300 (return)."</i></p>
                </li>
                <li>
                    <div class="step-header">
                        <span class="step-number">6</span>
                        <h4>Repeat</h4>
                    </div>
                    <p>The LLM checks if it needs more steps. If yes, it loops back to <strong>Thought ‚Üí Action</strong>.</p>
                </li>
                <li>
                    <div class="step-header">
                        <span class="step-number">7</span>
                        <h4>Final Answer</h4>
                    </div>
                    <p>The LLM combines all observations: <i>"Total cost: ‚Çπ38,800. Here are the flight details‚Ä¶"</i></p>
                </li>
            </ol>
        </div>

        <h2>Your Questions, Answered</h2>
        <div class="qa-section">
            <div class="qa-card">
                <h3>Q1: Does the LLM actually "call" the tools itself?</h3>
                <div class="answer">
                    <p><strong>No.</strong> The LLM is like a project manager‚Äîit only <i>decides</i> which tool to use and what inputs to give. Frameworks like LangChain or ReAct handle the actual tool execution.</p>
                    <ul class="process-steps">
                        <li>You give the LLM a list of tools it can use</li>
                        <li>The LLM says: <i>"Use the Flight tool with these dates."</i></li>
                        <li>Your code/system runs the Flight API and returns data</li>
                        <li>The LLM then decides the next step</li>
                    </ul>
                </div>
            </div>

            <div class="qa-card">
                <h3>Q2: Will the LLM always choose the right tool?</h3>
                <div class="answer">
                    <p><strong>Not always.</strong> It depends on two factors:</p>
                    <div class="factor-box">
                        <h4>Model Strength</h4>
                        <p>GPT-4 will make better decisions than smaller models.</p>
                        <div class="example-note">
                            <p>Example: For "What's 25% of ‚Çπ40,000?"</p>
                            <ul>
                                <li>Weak model: Tries to calculate itself</li>
                                <li>Strong model: Uses Calculator tool</li>
                            </ul>
                        </div>
                    </div>
                    <div class="factor-box">
                        <h4>Prompt Engineering</h4>
                        <p>Clear instructions matter.</p>
                        <div class="example-note">
                            <p>Bad prompt: <i>"Answer the user."</i></p>
                            <p>Good prompt: <i>"Use Calculator for math."</i></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <h2>Real-World Agent Frameworks</h2>
        <div class="frameworks-box">
            <p>Companies are already building systems to automate this "thought ‚Üí action" loop:</p>
            <div class="framework-grid">
                <div class="framework-card">
                    <a href="https://github.com/Significant-Gravitas/AutoGPT" target="_blank" rel="noopener noreferrer">
                        <h3>ü§ñ AutoGPT</h3>
                    </a>
                    <p>Breaks down complex goals (e.g., "Plan a vacation") into smaller tasks, uses web search, booking tools, and calendars.</p>
                </div>
                <div class="framework-card">
                 <a href="https://github.com/yoheinakajima/babyagi" target="_blank" rel="noopener noreferrer">
                    <h3>üë∂ BabyAGI</h3>
                </a>
                    <p>Creates and prioritizes task lists, like a virtual project manager.</p>
                </div>
                <div class="framework-card">
                <a href="https://www.langflow.org/" target="_blank" rel="noopener noreferrer">
                    <h3>LangfLow</h3>
                </a>
                    <p>Langflow is a low-code tool for developers that makes it easier to build powerful AI agents and workflows that can use any API, model, or database </p>
                </div>
                <div class="framework-card">
                <a href="https://www.langchain.com/langgraph" target="_blank" rel="noopener noreferrer">
                    <h3>LangGraph</h3>
                </a>
                    <p>Gain control with LangGraph to design agents that reliably handle complex tasks. Build and scale agentic applications with LangGraph Platform. </p>
                </div>
                <div class="framework-card">
                <a href="https://www.phidata.com/" target="_blank" rel="noopener noreferrer">
                    <h3>Phidata</h3>
                </a>
                    <p>An open-source platform to build, ship and monitor agentic systems.</p>
                </div>
                <div class="framework-card">
                <a href="https://www.crewai.com/" target="_blank" rel="noopener noreferrer">
                    <h3>Crewai</h3>
                </a>
                    <p>Streamline workflows across industries with powerful AI agents. Build and deploy automated workflows using any LLM and cloud platform.</p>
                </div>
                <div class="framework-card">
                <a href="https://github.com/microsoft/autogen" target="_blank" rel="noopener noreferrer">
                    <h3>Microsoft AutoGen</h3>
                </a>
                    <p>AutoGen is an open-source programming framework for building AI agents and facilitating cooperation among multiple agents to solve tasks.</p>
                </div>
            </div>
        </div>


                        <h2>Understanding Function Execution in AI Agents</h2>
        <div class="function-section">
            <h3>Anatomy of a Function Call</h3>
            <p>A flight-search function requires structured inputs to work reliably. For example, the LLM might request flight data like this:</p>
             <br>
            <div class="code-block">
                <pre><code>get_flight_prices(
    departure_city="DEL",  # Delhi
    arrival_city="DPS",    # Bali
    dates="2024-11-15 to 2024-11-22"
)</code></pre>
            </div>
                     <br>
                   <p>The function connects to a flight API, returning raw data about airlines, prices, and timings for both outbound and return flights.</p>
                    <br>
            <div class="execution-flow">
                <h4>The LLM's Decision Process:</h4>
                 <br>
                <ol>
                    <li>Identifies the cheapest outbound flight (e.g., ‚Çπ18,500 with Air India)</li>
                    <li>Finds the cheapest return flight (e.g., ‚Çπ20,300 with IndiGo)</li>
                    <li>Calls <code>calculator_add(a=18500, b=20300)</code> to sum the fares</li>
                    <li>Returns the final answer: "Total cost: ‚Çπ38,800. Cheapest flights: Air India (Departure) + IndiGo (Return)."</li>
                </ol>
            </div>

                       <div class="important-note">
                        <br>
                <h4>üîë Key Point</h4>
                 <br>
                <p>The LLM never executes the function itself‚Äîit only triggers the workflow. Frameworks like LangChain handle the actual API calls, validate inputs, and pass results back to the model.</p>
            </div>
             <br>

            <h3>Function Code Example (Python)</h3>
<div class="code-block">
    <pre><code>def get_google_flights(
    departure_code: str,  # IATA code (e.g., "DEL" for Delhi)
    arrival_code: str,    # IATA code (e.g., "DPS" for Bali)
    departure_date: str,  # Format: "YYYY-MM-DD"
    return_date: str,     # Format: "YYYY-MM-DD"
    cabin_class: str = "economy"
    ) -&gt; list[dict]:
        """
    Fetches flight prices from Google Flights API.
    Returns list of flights sorted by price.
    """
    response = requests.get(
        "https://api.google.com/flights",
        params=&lbrace;
            "departure_code": departure_code,
            "arrival_code": arrival_code,
            "departure_date": departure_date,
            "return_date": return_date,
            "cabin_class": cabin_class
        &rbrace;
    )
    # Process response  
    flights = response.json()["flights"]  
    return sorted(flights, key=lambda x: x["price"])  # Sort by cheapest</code></pre>
            </div>
             <br>
            <div class="example-section">
                <h4>Sample Input (from LLM):</h4>
                 <br>
                <div class="code-block">
                    <pre><code>get_google_flights(  
    departure_code="DEL",  
    arrival_code="DPS",  
    departure_date="2024-11-15",  
    return_date="2024-11-22"  
)</code></pre>
                </div>
         <br>
        <h4>Sample Output (API Response):</h4>
                 <br>
        <div class="code-block">
    <pre><code>&lbrack;  
    &lbrace;  
        "airline": "Air India",  
        "price": 18500,  
        "departure_time": "08:30",  
        "flight_number": "AI-876"  
    &rbrace;,  
    &lbrace;  
        "airline": "IndiGo",  
        "price": 20300,  
        "departure_time": "14:15",  
        "flight_number": "6E-132"  
    &rbrace;  
&rbrack;</code></pre>
</div>


           <div class="execution-steps">
                <h3>Execution Flow</h3>
                <ol>
                    <li>The LLM triggers <code>get_google_flights</code> with validated inputs.</li>
                    <li>The system calls the API and returns sorted flight data.</li>
                    <li>The LLM selects the cheapest option (‚Çπ18,500 Air India).</li>
                    <li>Repeats steps 1-3 for return flights.</li>
                    <li>Calls <code>calculator_add(18500, 20300)</code> to sum prices.</li>
                    <li>Returns final answer: "Total: ‚Çπ38,800. Cheapest flights: Air India (Depart) + IndiGo (Return)."</li>
                </ol>
            </div>

            <div class="tutorial-link">
                <h4>Want to Learn More?</h4>
                <p>For a more detailed understanding, check out the <a href="https://langchain-ai.github.io/langgraph/tutorials/introduction/#requirements" target="_blank" rel="noopener noreferrer">LangChain tutorial</a> that walks through building agents step by step.</p>
            </div>
        </div>
            
        
        

        <h2>Why This Changes Everything</h2>
        <div class="conclusion-box">
            <p>Today's LLMs are like smart assistants who can only <i>talk</i>. AI agents, though, are like giving them hands, eyes, and access to the real world. They don't just answer questions‚Äîthey <i>act</i> on them.</p>
            <ul class="future-possibilities">
                <li>Need to book a hotel? They'll compare prices, check your calendar, and reserve a room.</li>
                <li>Need to fix a bug in your code? They'll test solutions, debug, and even deploy the fix.</li>
            </ul>
            <p class="final-thought">This is the future: AI agents won't just <i>talk</i>‚Äîthey'll <i>act</i>, solve problems, and automate tasks we hate. And that's why 2025 might just be their year.</p>
        </div>

        <h2>My Views and Conclusion</h2>

        <p>
        I personally feel, Agents are definetly are an awesome way to boost the power of LLMs, and they definetly hold the future of AI. But let‚Äôs keep perspective: while they‚Äôre leagues ahead of traditional language models in <i>taking action</i>, the hype about them "taking over jobs overnight" feels overhyped. 
        They can definetly make our life is easy. 
        </p>
        <p>Will they make our lives easier? Absolutely ! But we should give them some time and then come to a final conclusion </p>
        <br>
        <p>
        If you enjoyed this piece or have thoughts to share, I‚Äôd love to hear from you! <a href="/about#connect_with_me" class="cta-link">Let‚Äôs chat ‚Üí</a>        </p>
        <br>
        <p>
        Happy Learning ‚ù§Ô∏è
        </p>

    </div>
</BlogPost>

<style>
    .blog-content {
        max-width: 800px;
        margin: 0 auto;
    }

    .intro-text {
        font-size: 1.1rem;
        line-height: 1.6;
        color: #444;
    }

    .highlight-quote {
        font-size: 1.4rem;
        color: #2a2a2a;
        border-left: 4px solid #3b82f6;
        padding: 1rem 2rem;
        margin: 2rem 0;
        background: #f8fafc;
        border-radius: 0.5rem;
    }

    h2 {
        margin-top: 2.5rem;
        margin-bottom: 1rem;
        color: #1a1a1a;
        font-size: 1.8rem;
    }

    h3 {
        color: #2a2a2a;
        margin-bottom: 1rem;
        font-size: 1.4rem;
    }

    .definition-box {
        background: #f1f5f9;
        padding: 1.5rem;
        border-radius: 0.5rem;
        margin: 1.5rem 0;
        border: 1px solid #e2e8f0;
    }

    .tools-box {
        background: #f8fafc;
        padding: 1.5rem;
        border-radius: 0.5rem;
        margin: 1.5rem 0;
    }

    .tools-box ul {
        list-style: none;
        padding-left: 1rem;
        margin: 0;
    }

    .tools-box li {
        margin-bottom: 0.5rem;
        position: relative;
    }

    .tools-box li::before {
        content: "‚Ä¢";
        position: absolute;
        left: -1rem;
        color: #3b82f6;
    }

    .examples-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
        margin: 2rem 0;
    }

    .example-card {
        background: white;
        border: 1px solid #e2e8f0;
        border-radius: 0.5rem;
        padding: 1.5rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .example-card h3 {
        margin-top: 0;
        color: #2a2a2a;
    }

    .example-card .tools {
        color: #666;
        font-size: 0.9rem;
        margin-bottom: 1rem;
        font-style: italic;
    }

    .note-box {
        background: #fffbeb;
        border: 1px solid #fcd34d;
        padding: 1.5rem;
        border-radius: 0.5rem;
        margin: 2rem 0;
    }

    .note-box p {
        margin: 0;
        color: #92400e;
    }


    .workflow-box {
        background: #f8fafc;
        border-radius: 0.5rem;
        padding: 2rem;
        margin: 2rem 0;
        border: 1px solid #e2e8f0;
    }

    .workflow-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .workflow-list li {
        margin-bottom: 2rem;
        position: relative;
    }

    .step-header {
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
    }

    .step-number {
        background: #3b82f6;
        color: white;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.9rem;
        margin-right: 0.75rem;
    }

    .tool-list {
        list-style: none;
        padding-left: 1rem;
        margin: 0.5rem 0;
    }


    .qa-section {
        display: grid;
        gap: 2rem;
        margin: 2rem 0;
    }

    .qa-card {
        background: white;
        border: 1px solid #e2e8f0;
        border-radius: 0.5rem;
        padding: 1.5rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .factor-box {
        background: #f8fafc;
        border-radius: 0.5rem;
        padding: 1rem;
        margin: 1rem 0;
    }

    .example-note {
        background: #f1f5f9;
        border-radius: 0.25rem;
        padding: 0.75rem;
        margin-top: 0.5rem;
        font-size: 0.9rem;
    }

    .frameworks-box {
        background: #f8fafc;
        border-radius: 0.5rem;
        padding: 2rem;
        margin: 2rem 0;
    }

    .framework-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-top: 1.5rem;
    }

    .framework-card {
        background: white;
        border: 1px solid #e2e8f0;
        border-radius: 0.5rem;
        padding: 1.5rem;
    }

    .conclusion-box {
        background: #f8fafc;
        border-radius: 0.5rem;
        padding: 2rem;
        margin: 2rem 0;
        border: 1px solid #e2e8f0;
    }

    .future-possibilities {
        margin: 1.5rem 0;
        padding-left: 1.5rem;
    }

    .final-thought {
        font-size: 1.1rem;
        color: #2a2a2a;
        margin-top: 1.5rem;
        font-weight: 500;
    }


    .execution-steps {
        background: white;
        padding: 1.5rem;
        border-radius: 0.5rem;
        margin: 2rem 0;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .execution-steps ol {
        margin: 1rem 0 0 1.5rem;
    }

    .execution-steps li {
        margin-bottom: 0.75rem;
        color: #4a5568;
    }

    .tutorial-link {
        background: #f0fff4;
        border: 1px solid #9ae6b4;
        padding: 1.5rem;
        border-radius: 0.5rem;
        margin: 2rem 0;
    }

    .tutorial-link h4 {
        color: #22543d;
        margin: 0 0 0.5rem 0;
    }

    .tutorial-link a {
        color: #2f855a;
        text-decoration: none;
        font-weight: 500;
    }

    .tutorial-link a:hover {
        text-decoration: underline;
    }

    code {
        background: #edf2f7;
        padding: 0.2rem 0.4rem;
        border-radius: 0.25rem;
        font-family: 'Fira Code', monospace;
        font-size: 0.9em;
        color: #2d3748;
    }

    @media (max-width: 768px) {
        .function-section {
            padding: 1rem;
        }

        .code-block {
            padding: 1rem;
        }

        .code-block code {
            font-size: 0.8rem;
        }

        .framework-grid {
            grid-template-columns: 1fr;
        }
    }
</style>